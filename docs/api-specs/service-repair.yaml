```yaml
openapi: 3.0.3
info:
  title: Repair Service API
  description: API to manage repair requests and processes
  version: 1.0.0
servers:
  - url: "http://localhost:8084"
    description: Development Server

tags:
  - name: repairs
    description: Manage repair requests
  - name: technicians
    description: Manage technician assignments
  - name: parts
    description: Manage parts used in repairs
  - name: actions
    description: Manage repair actions
  - name: dashboard
    description: Dashboard statistics

paths:
  /api/v1/repairs:
    get:
      summary: Get all repair requests
      description: Returns a list of all repair requests in the system
      tags: [repairs]
      responses:
        "200":
          description: List of repair requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RepairRequestResponseDto"
    post:
      summary: Create a new repair request
      description: Creates a new repair request in the system
      tags: [repairs]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepairRequestDto"
      responses:
        "201":
          description: Repair request created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepairRequestResponseDto"
        "400":
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/repairs/{id}:
    get:
      summary: Get repair request by ID
      description: Returns detailed information of a repair request by its ID
      tags: [repairs]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Repair request information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepairRequestResponseDto"
        "404":
          description: Repair request not found

  /api/v1/repairs/customer/{customerId}:
    get:
      summary: Get repair requests by customer ID
      description: Returns a list of repair requests for a specific customer
      tags: [repairs]
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List of repair requests for the customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RepairRequestResponseDto"

  /api/v1/repairs/status/{status}:
    get:
      summary: Get repair requests by status
      description: Returns a list of repair requests with the specified status
      tags: [repairs]
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
            enum: [SUBMITTED, RECEIVED, DIAGNOSING, REPAIRING, COMPLETED]
      responses:
        "200":
          description: List of repair requests with the specified status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RepairRequestResponseDto"

  /api/v1/repairs/{id}/receive:
    post:
      summary: Process product receipt
      description: Mark the repair request as received and assign a technician
      tags: [repairs]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TechnicianDto"
      responses:
        "200":
          description: Product received successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepairRequestResponseDto"
        "400":
          description: Invalid state transition
        "404":
          description: Repair request not found

  /api/v1/repairs/{id}/technician/{technicianId}:
    post:
      summary: Assign technician to repair
      description: Assign a technician to a repair request
      tags: [repairs, technicians]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: technicianId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Technician assigned successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepairRequestResponseDto"
        "400":
          description: Invalid technician ID
        "404":
          description: Repair request not found

  /api/v1/repairs/{id}/actions:
    post:
      summary: Add repair action
      description: Add a repair action to a repair request
      tags: [repairs, actions]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepairActionDto"
      responses:
        "200":
          description: Repair action added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepairActionDto"
        "400":
          description: Invalid action data
        "404":
          description: Repair request not found

  /api/v1/repairs/{id}/start-diagnosis:
    post:
      summary: Start diagnostic process
      description: Start the diagnostic process for a repair request
      tags: [repairs]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Diagnosis started successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepairRequestResponseDto"
        "400":
          description: Invalid state transition
        "404":
          description: Repair request not found

  /api/v1/repairs/{id}/complete-diagnosis:
    post:
      summary: Complete diagnosis and start repair
      description: Complete the diagnostic process and start the repair
      tags: [repairs]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiagnosisDto"
      responses:
        "200":
          description: Diagnosis completed successfully and repair started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepairRequestResponseDto"
        "400":
          description: Invalid state transition
        "404":
          description: Repair request not found

  /api/v1/repairs/{id}/parts:
    post:
      summary: Add part to repair
      description: Add a part to a repair request
      tags: [repairs, parts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepairPartDto"
      responses:
        "200":
          description: Part added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepairPartDto"
        "400":
          description: Invalid state for adding parts
        "404":
          description: Repair request not found

  /api/v1/repairs/{id}/complete-repair:
    post:
      summary: Complete repair
      description: Mark the repair as completed
      tags: [repairs]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepairCompletionDto"
      responses:
        "200":
          description: Repair completed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepairRequestResponseDto"
        "400":
          description: Invalid state transition
        "404":
          description: Repair request not found

  /api/v1/repairs/dashboard:
    get:
      summary: Get dashboard statistics
      description: Returns statistics for the repair dashboard
      tags: [dashboard]
      responses:
        "200":
          description: Dashboard statistics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardStatsDto"

components:
  schemas:
    RepairRequestDto:
      type: object
      properties:
        warrantyId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        productId:
          type: integer
          format: int32
        issueDescription:
          type: string
        imageUrls:
          type: string

    RepairRequestResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        warrantyId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        productId:
          type: integer
          format: int32
        issueDescription:
          type: string
        imageUrls:
          type: string
        status:
          type: string
          enum: [SUBMITTED, RECEIVED, DIAGNOSING, REPAIRING, COMPLETED]
        repairNotes:
          type: string
        technicianId:
          type: integer
          format: int32
        technicianName:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        repairCost:
          type: number
          format: decimal
        withinWarranty:
          type: boolean
        statusHistory:
          type: array
          items:
            $ref: "#/components/schemas/RepairStatusHistoryDto"
        parts:
          type: array
          items:
            $ref: "#/components/schemas/RepairPartDto"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/RepairActionDto"

    TechnicianDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        specialization:
          type: string
        isActive:
          type: boolean

    RepairStatusHistoryDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        status:
          type: string
        notes:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time

    RepairActionDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        actionType:
          type: string
        description:
          type: string
        technicianId:
          type: integer
          format: int32
        technicianName:
          type: string
        performedAt:
          type: string
          format: date-time

    RepairPartDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        partName:
          type: string
        partNumber:
          type: string
        description:
          type: string
        isWarrantyReplacement:
          type: boolean

    RepairPartUpdateDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        partName:
          type: string
        partNumber:
          type: string
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: decimal

    DiagnosisDto:
      type: object
      properties:
        diagnosticNotes:
          type: string

    RepairCompletionDto:
      type: object
      properties:
        completionNotes:
          type: string
        sucessfullyRepaired:
          type: boolean

    RepairUpdateDto:
      type: object
      properties:
        repairNotes:
          type: string
        technicianId:
          type: integer
          format: int32
        repairCost:
          type: number
          format: decimal

    DashboardStatsDto:
      type: object
      properties:
        totalRepairRequests:
          type: integer
          format: int32
        pendingRepairRequests:
          type: integer
          format: int32
        inProgressRepairRequests:
          type: integer
          format: int32
        completedRepairRequests:
          type: integer
          format: int32
        cancelledRepairRequests:
          type: integer
          format: int32
        averageRepairTime:
          type: number
          format: double
        technicianPerformance:
          type: array
          items:
            $ref: "#/components/schemas/TechnicianPerformanceDto"

    TechnicianPerformanceDto:
      type: object
      properties:
        technicianId:
          type: integer
          format: int32
        technicianName:
          type: string
        completedRepairs:
          type: integer
          format: int32
        averageRepairTime:
          type: number
          format: double

    Error:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
```