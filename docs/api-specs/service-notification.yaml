```yaml
openapi: 3.0.3
info:
  title: Notification Service API
  description: API to manage notifications for customers and services
  version: 1.0.0
servers:
  - url: "http://localhost:8085"
    description: Development Server

tags:
  - name: notifications
    description: Manage notifications
  - name: templates
    description: Manage notification templates

paths:
  /api/v1/notifications:
    # This POST endpoint is commented out as it appears to not be active in the code
    # post:
    #   summary: Send a notification
    #   description: Creates and sends a notification to a customer
    #   tags: [notifications]
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: "#/components/schemas/NotificationRequestDto"
    #   responses:
    #     "201":
    #       description: Notification sent successfully
    #       content:
    #         application/json:
    #           schema:
    #             $ref: "#/components/schemas/NotificationResponseDto"
    #     "400":
    #       description: Invalid data

  /api/v1/notifications/customer/{customerId}:
    get:
      summary: Get notifications by customer ID
      description: Returns a list of notifications for a specific customer
      tags: [notifications]
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List of notifications for the customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationResponseDto"

  /api/v1/notifications/related/{relatedEntityId}:
    get:
      summary: Get notifications by related entity ID
      description: Returns a list of notifications for a specific related entity (e.g. warranty request)
      tags: [notifications]
      parameters:
        - name: relatedEntityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List of notifications for the related entity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationResponseDto"

  /api/v1/notification-templates:
    get:
      summary: Get all notification templates
      description: Returns a list of all notification templates
      tags: [templates]
      responses:
        "200":
          description: List of notification templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationTemplate"
    post:
      summary: Create a notification template
      description: Creates a new notification template
      tags: [templates]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateRequestDto"
      responses:
        "201":
          description: Template created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTemplate"
        "400":
          description: Invalid data

  /api/v1/notification-templates/{id}:
    get:
      summary: Get notification template by ID
      description: Returns a notification template by its ID
      tags: [templates]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Notification template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTemplate"
        "404":
          description: Template not found
    put:
      summary: Update notification template
      description: Updates an existing notification template
      tags: [templates]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateRequestDto"
      responses:
        "200":
          description: Template updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationTemplate"
        "400":
          description: Invalid data
        "404":
          description: Template not found
    delete:
      summary: Delete notification template
      description: Deletes a notification template
      tags: [templates]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Template deleted successfully
        "404":
          description: Template not found

  /api/v1/notification-templates/type/{type}:
    get:
      summary: Get notification templates by type
      description: Returns notification templates by their type
      tags: [templates]
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum: [REPAIR_CREATED, REPAIR_REJECTED, REPAIR_APPROVED, PRODUCT_RECEIVED, DIAGNOSIS_STARTED, REPAIR_IN_PROGRESS, REPAIR_COMPLETED, PRODUCT_SHIPPING, PRODUCT_DELIVERED, FEEDBACK_REQUEST, WARRANTY_APPROVED, WARRANTY_REJECTED, WARRANTY_RECEIVED, WARRANTY_COMPLETED]
      responses:
        "200":
          description: Notification templates of the specified type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationTemplate"

  /api/v1/notification-templates/active:
    get:
      summary: Get active notification templates
      description: Returns all active notification templates
      tags: [templates]
      responses:
        "200":
          description: Active notification templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationTemplate"

components:
  schemas:
    NotificationRequestDto:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        type:
          type: string
          enum: [REPAIR_CREATED, REPAIR_REJECTED, REPAIR_APPROVED, PRODUCT_RECEIVED, DIAGNOSIS_STARTED, REPAIR_IN_PROGRESS, REPAIR_COMPLETED, PRODUCT_SHIPPING, PRODUCT_DELIVERED, FEEDBACK_REQUEST, WARRANTY_APPROVED, WARRANTY_REJECTED, WARRANTY_RECEIVED, WARRANTY_COMPLETED]
        warrantyRequestId:
          type: integer
          format: int32
        customerName:
          type: string
        email:
          type: string
          format: email
        message:
          type: string
        productName:
          type: string

    NotificationResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        type:
          type: string
          enum: [REPAIR_CREATED, REPAIR_REJECTED, REPAIR_APPROVED, PRODUCT_RECEIVED, DIAGNOSIS_STARTED, REPAIR_IN_PROGRESS, REPAIR_COMPLETED, PRODUCT_SHIPPING, PRODUCT_DELIVERED, FEEDBACK_REQUEST, WARRANTY_APPROVED, WARRANTY_REJECTED, WARRANTY_RECEIVED, WARRANTY_COMPLETED]
        warrantyRequestId:
          type: integer
          format: int32
        email:
          type: string
          format: email
        subject:
          type: string
        status:
          type: string
          enum: [PENDING, SENT, FAILED]
        sentAt:
          type: string
          format: date-time

    NotificationTemplate:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          type: string
          enum: [REPAIR_CREATED, REPAIR_REJECTED, REPAIR_APPROVED, PRODUCT_RECEIVED, DIAGNOSIS_STARTED, REPAIR_IN_PROGRESS, REPAIR_COMPLETED, PRODUCT_SHIPPING, PRODUCT_DELIVERED, FEEDBACK_REQUEST, WARRANTY_APPROVED, WARRANTY_REJECTED, WARRANTY_RECEIVED, WARRANTY_COMPLETED]
        subject:
          type: string
        contentTemplate:
          type: string
        isActive:
          type: boolean

    TemplateRequestDto:
      type: object
      properties:
        type:
          type: string
          enum: [REPAIR_CREATED, REPAIR_REJECTED, REPAIR_APPROVED, PRODUCT_RECEIVED, DIAGNOSIS_STARTED, REPAIR_IN_PROGRESS, REPAIR_COMPLETED, PRODUCT_SHIPPING, PRODUCT_DELIVERED, FEEDBACK_REQUEST, WARRANTY_APPROVED, WARRANTY_REJECTED, WARRANTY_RECEIVED, WARRANTY_COMPLETED]
        subject:
          type: string
        contentTemplate:
          type: string
        isActive:
          type: boolean

    WarrantyNotificationEvent:
      type: object
      properties:
        warrantyRequestId:
          type: integer
          format: int32
        email:
          type: string
          format: email
        productName:
          type: string
        customerId:
          type: integer
          format: int32
        type:
          type: string
          enum: [REPAIR_CREATED, REPAIR_REJECTED, REPAIR_APPROVED, PRODUCT_RECEIVED, DIAGNOSIS_STARTED, REPAIR_IN_PROGRESS, REPAIR_COMPLETED, PRODUCT_SHIPPING, PRODUCT_DELIVERED, FEEDBACK_REQUEST, WARRANTY_APPROVED, WARRANTY_REJECTED, WARRANTY_RECEIVED, WARRANTY_COMPLETED]
        message:
          type: string
        customerName:
          type: string

    Error:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string