```yaml
openapi: 3.0.3
info:
  title: Survey Service API
  description: API to manage customer surveys and feedback
  version: 1.0.0
servers:
  - url: "http://localhost:8087"
    description: Development Server

tags:
  - name: surveys
    description: Manage surveys
  - name: responses
    description: Manage survey responses

paths:
  /api/v1/surveys:
    get:
      summary: Get all surveys
      description: Returns a list of all surveys in the system
      tags: [surveys]
      responses:
        "200":
          description: List of surveys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SurveyDto"
    post:
      summary: Create a new survey
      description: Creates a new survey with questions
      tags: [surveys]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSurveyRequest"
      responses:
        "201":
          description: Survey created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurveyDto"
        "400":
          description: Invalid data

  /api/v1/surveys/active:
    get:
      summary: Get all active surveys
      description: Returns a list of all active surveys
      tags: [surveys]
      responses:
        "200":
          description: List of active surveys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SurveyDto"

  /api/v1/surveys/{id}:
    get:
      summary: Get survey by ID
      description: Returns detailed information of a survey by its ID
      tags: [surveys]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Survey information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurveyDto"
        "404":
          description: Survey not found
    delete:
      summary: Delete survey
      description: Deletes a survey from the system
      tags: [surveys]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Survey deleted successfully
        "400":
          description: Error deleting survey
        "404":
          description: Survey not found

  /api/v1/surveys/{id}/status:
    patch:
      summary: Update survey status
      description: Updates the active status of a survey
      tags: [surveys]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: active
          in: query
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: Survey status updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurveyDto"
        "400":
          description: Error updating survey status
        "404":
          description: Survey not found

  /api/v1/surveys/survey-responses:
    get:
      summary: Get all survey responses
      description: Returns a list of all survey responses
      tags: [responses]
      responses:
        "200":
          description: List of survey responses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseDto"
    post:
      summary: Submit a survey response
      description: Submits a response to a survey
      tags: [responses]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitSurveyResponseRequest"
      responses:
        "201":
          description: Survey response submitted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
        "400":
          description: Invalid data

  /api/v1/surveys/survey-responses/{id}:
    get:
      summary: Get survey response by ID
      description: Returns detailed information of a survey response by its ID
      tags: [responses]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Survey response information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
        "404":
          description: Survey response not found

  /api/v1/surveys/survey-responses/customer/{customerId}:
    get:
      summary: Get survey responses by customer ID
      description: Returns a list of survey responses for a specific customer
      tags: [responses]
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of survey responses for the customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseDto"

  /api/v1/surveys/survey-responses/survey/{surveyId}:
    get:
      summary: Get survey responses by survey ID
      description: Returns a list of responses for a specific survey
      tags: [responses]
      parameters:
        - name: surveyId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of responses for the survey
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseDto"

components:
  schemas:
    CreateSurveyRequest:
      type: object
      required:
        - title
        - questions
      properties:
        title:
          type: string
        description:
          type: string
        questions:
          type: array
          items:
            $ref: "#/components/schemas/CreateQuestionRequest"

    CreateQuestionRequest:
      type: object
      required:
        - questionText
      properties:
        questionText:
          type: string
        required:
          type: boolean
          default: false
        questionOrder:
          type: integer
          format: int32

    SurveyDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        questions:
          type: array
          items:
            $ref: "#/components/schemas/QuestionDto"

    QuestionDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        surveyId:
          type: integer
          format: int64
        questionText:
          type: string
        questionOrder:
          type: integer
          format: int32
        required:
          type: boolean

    SubmitSurveyResponseRequest:
      type: object
      required:
        - surveyId
        - customerId
        - answers
      properties:
        surveyId:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int64
        answers:
          type: array
          items:
            $ref: "#/components/schemas/QuestionAnswerRequest"

    QuestionAnswerRequest:
      type: object
      required:
        - questionId
      properties:
        questionId:
          type: integer
          format: int64
        answerText:
          type: string

    ResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        surveyId:
          type: integer
          format: int64
        surveyTitle:
          type: string
        customerId:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        answers:
          type: array
          items:
            $ref: "#/components/schemas/ResponseAnswerDto"

    ResponseAnswerDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        responseId:
          type: integer
          format: int64
        questionId:
          type: integer
          format: int64
        questionText:
          type: string
        answerText:
          type: string
```